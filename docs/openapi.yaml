openapi: 3.0.3
info:
  title: Todo
  description: An application to manage your daily tasks
  contact:
    email: syauqilenterano@gmail.com
  version: 1.0.11
servers:
- url: http://localhost:5000/api/v3
tags:
- name: Sign Up
  description: This API handles registration of the user
- name: Authentication
  description: This API handles login and user token
- name: Todo
  description: This API handles login and user token
paths:
  /sign-up:
    post:
      tags:
      - Sign Up
      summary: Add new user
      operationId: sign_upPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpReq'
        required: true
      responses:
        "201":
          description: Add user is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpRes201'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: SignUp
  /sign-in:
    post:
      tags:
      - Authentication
      summary: Use this apis to sign in and refresh token
      operationId: sign_inPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInReq'
        required: true
      responses:
        "200":
          description: Sign in is successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Authentication
  /sign-out:
    post:
      tags:
      - Authentication
      summary: Use this to invalidate token
      operationId: sign_outPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignOutReq'
      responses:
        "200":
          description: Successfully invalidate token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignOutRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Authentication
  /todo:
    get:
      tags:
      - Todo
      summary: Use this api to list todos
      operationId: todoGET
      parameters:
      - name: assignee
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid4
          example: f6b9750b-ae78-40d5-9d20-a73178f594c2
      responses:
        "200":
          description: Successfully get all the todos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
    post:
      tags:
      - Todo
      summary: Use this api to add a todo
      operationId: todoPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoReq'
        required: true
      responses:
        "201":
          description: Add todo is succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTodoRes201'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
  /todo/{todo_id}/done:
    patch:
      tags:
      - Todo
      summary: change todo status to done
      operationId: todoTodo_idDonePATCH
      parameters:
      - name: todo_id
        in: path
        description: an id of todo with format of uuid4
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
      responses:
        "200":
          description: Edit on todo <todo_id> is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "404":
          description: Todo id is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoRes404'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
  /todo/{todo_id}/inprogress:
    patch:
      tags:
      - Todo
      summary: change todo status to done
      operationId: todoTodo_idInprogressPATCH
      parameters:
      - name: todo_id
        in: path
        description: an id of todo with format of uuid4
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
      responses:
        "200":
          description: Edit on todo <todo_id> is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "404":
          description: Todo id is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoRes404'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
  /todo/{todo_id}/todo:
    patch:
      tags:
      - Todo
      summary: change todo status to done
      operationId: todoTodo_idTodoPATCH
      parameters:
      - name: todo_id
        in: path
        description: an id of todo with format of uuid4
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
      responses:
        "200":
          description: Edit on todo <todo_id> is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "404":
          description: Todo id is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoRes404'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
  /todo/{todo_id}:
    put:
      tags:
      - Todo
      summary: Use this api to edit a todo
      operationId: todoTodo_idPUT
      parameters:
      - name: todo_id
        in: path
        description: an id of todo with format of uuid4
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoReq'
        required: true
      responses:
        "200":
          description: Edit on todo <todo_id> is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "404":
          description: Todo id is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoRes404'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
    delete:
      tags:
      - Todo
      summary: Use this api to delete a todo
      operationId: todoTodo_idDELETE
      parameters:
      - name: todo_id
        in: path
        description: an id of todo with format of uuid4
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
      responses:
        "200":
          description: Delete on todo <todo_id> is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelTodoRes200'
        "400":
          description: Request is not correct
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes400'
        "404":
          description: Todo id is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoRes404'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralRes500'
      x-swagger-router-controller: Todo
components:
  schemas:
    SignUpReq:
      required:
      - email
      - password
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@mail.com
        password:
          type: string
          example: Abcde_12345
    SignUpRes201:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        error:
          type: string
        data:
          type: object
      example:
        statusCode: 201
        message: User <email> is succesfully registered
        data: null
        error: null
    SignInReq:
      type: object
      properties:
        email:
          type: string
          example: john.doe@mail.com
        password:
          type: string
          example: Abcde_12345
    SignInRes200:
      type: object
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: <email> is successfully signed in
        data:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjliNmFjMDRkLWFlNWUtNDI5Ni1hNWEwLTE3Mjc4MGQxZWZkOCIsIm5hbWUiOiJqb2huIGRvZSIsImVtYWlsIjoiam9obiBkb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.R-lE8F-9yb5g4nbRKC0i_xrzu2ENwjIts0VjoUFWl7I
        error:
          type: string
      example:
        statusCode: 200
        data: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjliNmFjMDRkLWFlNWUtNDI5Ni1hNWEwLTE3Mjc4MGQxZWZkOCIsIm5hbWUiOiJqb2huIGRvZSIsImVtYWlsIjoiam9obiBkb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.R-lE8F-9yb5g4nbRKC0i_xrzu2ENwjIts0VjoUFWl7I
        message: <email> is successfully signed in
        error: null
    TodoReq:
      type: object
      properties:
        title:
          type: string
          example: Research Go Backend framework
        description:
          type: string
          example: "There are few popular frameworks to build backend system using\
            \ Go. For instances, gin, fiber etc. Please do comparative study about\
            \ those frameworks."
        due_date:
          type: integer
          example: 1669551406
        assignee:
          type: string
          example: f6b9750b-ae78-40d5-9d20-a73178f594c2
    AddTodoRes201:
      type: object
      properties:
        statusCode:
          type: integer
          example: 201
        message:
          type: string
          example: Todo <todo-id> is successfully added
        data:
          type: string
        error:
          type: string
      example:
        statusCode: 201
        data: null
        message: Todo <todo-id> is successfully added
        error: null
    EditTodoRes200:
      type: object
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Todo <todo_id> is successfully edited
        data:
          type: string
        error:
          type: string
      example:
        statusCode: 200
        data: null
        message: Todo <todo_id> is successfully edited
        error: null
    DelTodoRes200:
      type: object
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Todo <todo_id> is successfully deleted
        data:
          type: string
        error:
          type: string
      example:
        statusCode: 200
        data: null
        message: Todo <todo_id> is successfully deleted
        error: null
    ListTodoRes200:
      type: object
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Todos is successfully retrieved
        data:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        error:
          type: string
      example:
        statusCode: 200
        data:
        - updated_at: 1669411163
          due_date: 1669411163
          description: There are few well known GO framework to build backend. Please
            do comparative study.
          created_at: 1669411163
          id: f6b9750b-ae78-40d5-9d20-a73178f594c2
          title: Research on Go Frameworks
          status: todo
        - updated_at: 1669411163
          due_date: 1669411163
          description: There are few well known GO framework to build backend. Please
            do comparative study.
          created_at: 1669411163
          id: f6b9750b-ae78-40d5-9d20-a73178f594c2
          title: Research on Go Frameworks
          status: todo
        message: Todos is successfully retrieved
        error: null
    TodoRes404:
      type: object
      properties:
        statusCode:
          type: integer
          example: 404
        message:
          type: string
          example: Todo <todo_id> is not found
        data:
          type: string
        error:
          type: string
    Todo:
      type: object
      properties:
        id:
          type: string
          example: f6b9750b-ae78-40d5-9d20-a73178f594c2
        title:
          type: string
          example: Research on Go Frameworks
        description:
          type: string
          example: There are few well known GO framework to build backend. Please
            do comparative study.
        status:
          type: string
          example: todo
        due_date:
          type: integer
          example: 1669411163
        created_at:
          type: integer
          example: 1669411163
        updated_at:
          type: integer
          example: 1669411163
      example:
        updated_at: 1669411163
        due_date: 1669411163
        description: There are few well known GO framework to build backend. Please
          do comparative study.
        created_at: 1669411163
        id: f6b9750b-ae78-40d5-9d20-a73178f594c2
        title: Research on Go Frameworks
        status: todo
    SignOutReq:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjliNmFjMDRkLWFlNWUtNDI5Ni1hNWEwLTE3Mjc4MGQxZWZkOCIsIm5hbWUiOiJqb2huIGRvZSIsImVtYWlsIjoiam9obiBkb2UiLCJpYXQiOjE1MTYyMzkwMjJ9.R-lE8F-9yb5g4nbRKC0i_xrzu2ENwjIts0VjoUFWl7I
    SignOutRes200:
      type: object
      properties:
        statusCode: 
          type: integer
          example: 200
        message: 
          type: string
          example: 'User <email> token is successfully invalidated'
        data:
          type: object
          example: null
        error:
          type: string
          example: null
    GeneralRes400:
      type: object
      properties:
        statusCode:
          type: integer
          example: 400
        message:
          type: string
        error:
          type: string
          example: The request body is not correct.
    GeneralRes500:
      type: object
      properties:
        statusCode:
          type: integer
          example: 500
        message:
          type: string
          example:
        error:
          type: string
          example: null
        data:
          type: object
          example: null
